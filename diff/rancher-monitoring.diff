diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/Chart.yaml	2021-01-15 14:07:36.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -5,37 +5,40 @@
     - name: Upstream Project
       url: https://github.com/prometheus-operator/kube-prometheus
   artifacthub.io/operator: "true"
+  catalog.cattle.io/auto-install: rancher-monitoring-crd=match
   catalog.cattle.io/certified: rancher
+  catalog.cattle.io/display-name: Monitoring
   catalog.cattle.io/namespace: cattle-monitoring-system
+  catalog.cattle.io/provides-gvr: monitoring.coreos.com.prometheus/v1
   catalog.cattle.io/release-name: rancher-monitoring
   catalog.cattle.io/ui-component: monitoring
-  catalog.cattle.io/provides-gvr: monitoring.coreos.com.prometheus/v1
-  catalog.cattle.io/display-name: "Monitoring"
-  catalog.cattle.io/os: linux
-  catalog.cattle.io/auto-install: rancher-monitoring-crd=match
 apiVersion: v1
 appVersion: 0.38.1
-description: Collects several related Helm charts, Grafana dashboards, and Prometheus rules combined with documentation and scripts to provide easy to operate end-to-end Kubernetes cluster monitoring with Prometheus using the Prometheus Operator.
+description: Collects several related Helm charts, Grafana dashboards, and Prometheus
+  rules combined with documentation and scripts to provide easy to operate end-to-end
+  Kubernetes cluster monitoring with Prometheus using the Prometheus Operator.
 home: https://github.com/prometheus-operator/kube-prometheus
 icon: https://raw.githubusercontent.com/prometheus/prometheus.github.io/master/assets/prometheus_logo-cb55bb5c346.png
 keywords:
-  - operator
-  - prometheus
-  - kube-prometheus
-  - monitoring
+- operator
+- prometheus
+- kube-prometheus
+- monitoring
 maintainers:
-  - name: vsliouniaev
-  - name: bismarck
-  - email: gianrubio@gmail.com
-    name: gianrubio
-  - email: github.gkarthiks@gmail.com
-    name: gkarthiks
-  - email: scott@r6by.com
-    name: scottrigby
-  - email: miroslav.hadzhiev@gmail.com
-    name: Xtigyro
+- name: vsliouniaev
+- name: bismarck
+- email: gianrubio@gmail.com
+  name: gianrubio
+- email: github.gkarthiks@gmail.com
+  name: gkarthiks
+- email: scott@r6by.com
+  name: scottrigby
+- email: miroslav.hadzhiev@gmail.com
+  name: Xtigyro
+- email: arvind.iyengar@suse.com
+  name: Arvind
 name: rancher-monitoring
 sources:
-  - https://github.com/prometheus-community/helm-charts
-  - https://github.com/prometheus-operator/kube-prometheus
-version: 9.4.202
+- https://github.com/prometheus-community/helm-charts
+- https://github.com/prometheus-operator/kube-prometheus
+version: 9.4.202-rc00
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/grafana/ci/default-values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/grafana/ci/default-values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/grafana/ci/default-values.yaml	2021-01-15 14:07:36.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/grafana/ci/default-values.yaml	1969-12-31 16:00:00.000000000 -0800
@@ -1 +0,0 @@
-# Leave this file empty to ensure that CI runs builds against the default configuration in values.yaml.
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/grafana/ci/with-dashboard-json-values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/grafana/ci/with-dashboard-json-values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/grafana/ci/with-dashboard-json-values.yaml	2021-01-15 14:07:36.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/grafana/ci/with-dashboard-json-values.yaml	1969-12-31 16:00:00.000000000 -0800
@@ -1,53 +0,0 @@
-dashboards:
-  my-provider:
-    my-awesome-dashboard:
-      # An empty but valid dashboard
-      json: |
-        {
-          "__inputs": [],
-          "__requires": [
-            {
-              "type": "grafana",
-              "id": "grafana",
-              "name": "Grafana",
-              "version": "6.3.5"
-            }
-          ],
-          "annotations": {
-            "list": [
-              {
-                "builtIn": 1,
-                "datasource": "-- Grafana --",
-                "enable": true,
-                "hide": true,
-                "iconColor": "rgba(0, 211, 255, 1)",
-                "name": "Annotations & Alerts",
-                "type": "dashboard"
-              }
-            ]
-          },
-          "editable": true,
-          "gnetId": null,
-          "graphTooltip": 0,
-          "id": null,
-          "links": [],
-          "panels": [],
-          "schemaVersion": 19,
-          "style": "dark",
-          "tags": [],
-          "templating": {
-            "list": []
-          },
-          "time": {
-            "from": "now-6h",
-            "to": "now"
-          },
-          "timepicker": {
-            "refresh_intervals": ["5s"]
-          },
-          "timezone": "",
-          "title": "Dummy Dashboard",
-          "uid": "IdcYQooWk",
-          "version": 1
-        }
-      datasource: Prometheus
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/grafana/ci/with-dashboard-values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/grafana/ci/with-dashboard-values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/grafana/ci/with-dashboard-values.yaml	2021-01-15 14:07:36.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/grafana/ci/with-dashboard-values.yaml	1969-12-31 16:00:00.000000000 -0800
@@ -1,19 +0,0 @@
-dashboards:
-  my-provider:
-    my-awesome-dashboard:
-      gnetId: 10000
-      revision: 1
-      datasource: Prometheus
-dashboardProviders:
-  dashboardproviders.yaml:
-    apiVersion: 1
-    providers:
-    - name: 'my-provider'
-      orgId: 1
-      folder: ''
-      type: file
-      updateIntervalSeconds: 10
-      disableDeletion: true
-      editable: true
-      options:
-        path: /var/lib/grafana/dashboards/my-provider
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: k3sServer
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/k3sServer/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/k3sServer/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kube-state-metrics/OWNERS dev-v2.5-source-alt/charts/rancher-monitoring/charts/kube-state-metrics/OWNERS
--- dev-v2.5-source/charts/rancher-monitoring/charts/kube-state-metrics/OWNERS	2021-01-15 14:07:36.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kube-state-metrics/OWNERS	1969-12-31 16:00:00.000000000 -0800
@@ -1,8 +0,0 @@
-approvers:
-- fiunchinho
-- tariq1890
-- mrueg
-reviewers:
-- fiunchinho
-- tariq1890
-- mrueg
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: kubeAdmControllerManager
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmControllerManager/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmControllerManager/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: kubeAdmEtcd
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmEtcd/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmEtcd/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: kubeAdmProxy
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmProxy/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmProxy/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: kubeAdmScheduler
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/kubeAdmScheduler/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/kubeAdmScheduler/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/prometheus-adapter/ci/external-rules-values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/prometheus-adapter/ci/external-rules-values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/prometheus-adapter/ci/external-rules-values.yaml	2021-01-15 14:07:36.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/prometheus-adapter/ci/external-rules-values.yaml	1969-12-31 16:00:00.000000000 -0800
@@ -1,9 +0,0 @@
-rules:
-  external:
-  - seriesQuery: '{__name__=~"^some_metric_count$"}'
-    resources:
-      template: <<.Resource>>
-    name:
-      matches: ""
-      as: "my_custom_metric"
-    metricsQuery: sum(<<.Series>>{<<.LabelMatchers>>}) by (<<.GroupBy>>)
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/prometheus-node-exporter/OWNERS dev-v2.5-source-alt/charts/rancher-monitoring/charts/prometheus-node-exporter/OWNERS
--- dev-v2.5-source/charts/rancher-monitoring/charts/prometheus-node-exporter/OWNERS	2021-01-15 14:07:36.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/prometheus-node-exporter/OWNERS	1969-12-31 16:00:00.000000000 -0800
@@ -1,6 +0,0 @@
-approvers:
-- gianrubio
-- vsliouniaev
-reviewers:
-- gianrubio
-- vsliouniaev
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/prometheus-node-exporter/ci/port-values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/prometheus-node-exporter/ci/port-values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/prometheus-node-exporter/ci/port-values.yaml	2021-01-15 14:07:36.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/prometheus-node-exporter/ci/port-values.yaml	1969-12-31 16:00:00.000000000 -0800
@@ -1,3 +0,0 @@
-service:
-  targetPort: 9102
-  port: 9102
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/.helmignore	2021-01-15 13:46:43.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/.helmignore	1969-12-31 16:00:00.000000000 -0800
@@ -1,23 +0,0 @@
-# Patterns to ignore when building packages.
-# This supports shell glob matching, relative path matching, and
-# negation (prefixed with !). Only one pattern per line.
-.DS_Store
-# Common VCS dirs
-.git/
-.gitignore
-.bzr/
-.bzrignore
-.hg/
-.hgignore
-.svn/
-# Common backup files
-*.swp
-*.bak
-*.tmp
-*.orig
-*~
-# Various IDEs
-.project
-.idea/
-*.tmproj
-.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/Chart.yaml	2021-01-15 13:46:43.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
@@ -1,12 +0,0 @@
-annotations:
-  catalog.cattle.io/hidden: "true"
-  catalog.rancher.io/certified: rancher
-  catalog.rancher.io/namespace: cattle-monitoring-system
-  catalog.rancher.io/release-name: rancher-pushprox
-apiVersion: v1
-appVersion: 0.1.0
-description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
-  clients.
-name: rancher-pushprox
-type: application
-version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/README.md	2021-01-15 13:46:43.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/README.md	1969-12-31 16:00:00.000000000 -0800
@@ -1,54 +0,0 @@
-# rancher-pushprox
-
-A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
-
-Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
-
-Using an instance of this chart is suitable for the following scenarios:
-- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
-- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
-- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
-- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
-- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
-
-The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
-
-## Configuration
-
-The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
-
-### General
-
-#### Required
-| Parameter | Description | Example |
-| ----- | ----------- | ------ |
-| `component` | The component that is being monitored | `kube-etcd`
-| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
-
-#### Optional
-| Parameter | Description | Default |
-| ----- | ----------- | ------ |
-| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
-| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
-| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
-| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
-| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
-| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
-| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
-| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
-| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
-| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
-| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
-| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
-| `clients.resources` | Set resource limits and requests for the client container | `{}` |
-| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
-| `clients.tolerations` | Specify tolerations for clients | `[]` |
-| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
-| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
-| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
-| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
-| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
-
-*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
-
-See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/templates/_helpers.tpl	2021-01-15 13:46:43.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
@@ -1,65 +0,0 @@
-# Rancher
-
-{{- define "system_default_registry" -}}
-{{- if .Values.global.cattle.systemDefaultRegistry -}}
-{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
-{{- end -}}
-{{- end -}}
-
-# General
-
-{{- define "pushprox.namespace" -}}
-  {{- if .Values.namespaceOverride -}}
-    {{- .Values.namespaceOverride -}}
-  {{- else -}}
-    {{- .Release.Namespace -}}
-  {{- end -}}
-{{- end -}}
-
-{{- define "pushProxy.commonLabels" -}}
-release: {{ .Release.Name }}
-component: {{ .Values.component | quote }}
-provider: kubernetes
-{{- end -}}
-
-{{- define "pushProxy.proxyUrl" -}}
-{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
-{{- if .Values.clients.proxyUrl -}}
-{{ printf "%s" .Values.clients.proxyUrl }}
-{{- else -}}
-{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
-{{- end -}}{{- end -}}
-
-# Client
-
-{{- define "pushProxy.client.name" -}}
-{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
-{{- end -}}
-
-{{- define "pushProxy.client.labels" -}}
-k8s-app: {{ template "pushProxy.client.name" . }}
-{{ template "pushProxy.commonLabels" . }}
-{{- end -}}
-
-# Proxy
-
-{{- define "pushProxy.proxy.name" -}}
-{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
-{{- end -}}
-
-{{- define "pushProxy.proxy.labels" -}}
-k8s-app: {{ template "pushProxy.proxy.name" . }}
-{{ template "pushProxy.commonLabels" . }}
-{{- end -}}
-
-# ServiceMonitor
-
-{{- define "pushprox.serviceMonitor.name" -}}
-{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
-{{- end -}}
-
-{{- define "pushProxy.serviceMonitor.labels" -}}
-app: {{ template "pushprox.serviceMonitor.name" . }}
-release: {{ .Release.Name | quote }}
-{{ template "pushProxy.commonLabels" . }}
-{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-clients-rbac.yaml	2021-01-15 13:46:43.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
@@ -1,74 +0,0 @@
-{{- if .Values.clients }}{{- if .Values.clients.enabled }}
-apiVersion: rbac.authorization.k8s.io/v1
-kind: ClusterRole
-metadata:
-  name: {{ template "pushProxy.client.name" . }}
-  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
-rules:
-- apiGroups: ['policy']
-  resources: ['podsecuritypolicies']
-  verbs:     ['use']
-  resourceNames:
-  - {{ template "pushProxy.client.name" . }}
-{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
-- nonResourceURLs: ["/metrics"]
-  verbs: ["get"]
-{{- end }}
----
-apiVersion: rbac.authorization.k8s.io/v1
-kind: ClusterRoleBinding
-metadata:
-  name: {{ template "pushProxy.client.name" . }}
-  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
-roleRef:
-  apiGroup: rbac.authorization.k8s.io
-  kind: ClusterRole
-  name: {{ template "pushProxy.client.name" . }}
-subjects:
-  - kind: ServiceAccount
-    name: {{ template "pushProxy.client.name" . }}
-    namespace: {{ .Release.Namespace }}
----
-apiVersion: v1
-kind: ServiceAccount
-metadata:
-  name: {{ template "pushProxy.client.name" . }}
-  namespace: {{ .Release.Namespace }}
-  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
----
-apiVersion: policy/v1beta1
-kind: PodSecurityPolicy
-metadata:
-  name: {{ template "pushProxy.client.name" . }}
-  namespace: {{ .Release.Namespace }}
-  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
-spec:
-  privileged: false
-  hostNetwork: true
-  hostIPC: false
-  hostPID: false
-  runAsUser:
-    rule: 'RunAsAny'
-  seLinux:
-    rule: 'RunAsAny'
-  supplementalGroups:
-    rule: 'MustRunAs'
-    ranges:
-      - min: 0
-        max: 65535
-  fsGroup:
-    rule: 'MustRunAs'
-    ranges:
-      - min: 0
-        max: 65535
-  readOnlyRootFilesystem: false
-  volumes:
-    - 'secret'
-{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
-    - 'emptyDir'
-    - 'hostPath'
-  allowedHostPaths:
-  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
-    readOnly: true
-{{- end }}
-{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-clients.yaml	2021-01-15 13:46:43.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
@@ -1,133 +0,0 @@
-{{- if .Values.clients }}{{- if .Values.clients.enabled }}
-apiVersion: apps/v1
-kind: DaemonSet
-metadata:
-  name: {{ template "pushProxy.client.name" . }}
-  namespace: {{ template "pushprox.namespace" . }}
-  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
-    pushprox-exporter: "client"
-spec:
-  selector:
-    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
-  template:
-    metadata:
-      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
-    spec:
-{{- if .Values.clients.nodeSelector }}
-      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
-{{- end }}
-{{- if .Values.clients.tolerations }}
-      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
-{{- end }}
-      hostNetwork: true
-      dnsPolicy: ClusterFirstWithHostNet
-      serviceAccountName: {{ template "pushProxy.client.name" . }}
-      containers:
-      - name: pushprox-client
-        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
-        command:
-        {{- range .Values.clients.command }}
-          - {{ . | quote }}
-        {{- end }}
-        args:
-        - --fqdn=$(HOST_IP)
-        - --proxy-url=$(PROXY_URL)
-        - --metrics-addr=$(PORT)
-        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
-        {{- if .Values.clients.useLocalhost }}
-        - --use-localhost
-        {{- end }}
-        {{- if .Values.clients.https.enabled }}
-        {{- if .Values.clients.https.insecureSkipVerify }}
-        - --insecure-skip-verify
-        {{- end }}
-        {{- if .Values.clients.https.useServiceAccountCredentials }}
-        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
-        {{- end }}
-        {{- if .Values.clients.https.certDir }}
-        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
-        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
-        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
-        {{- end }}
-        {{- end }}
-        env:
-        - name: HOST_IP
-          valueFrom:
-            fieldRef:
-              fieldPath: status.hostIP
-        - name: PORT
-          value: :{{ .Values.clients.port }}
-        - name: PROXY_URL
-          value: {{ template "pushProxy.proxyUrl" . }}
-        securityContext:
-          runAsNonRoot: true
-          runAsUser: 1000
-        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
-        volumeMounts:
-        - name: metrics-cert-dir
-          mountPath: /etc/ssl/push-proxy
-        {{- end }}
-        {{- if .Values.clients.resources }}
-        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
-        {{- end }}
-      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
-      initContainers:
-      - name: copy-certs
-        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
-        command:
-        - sh
-        - -c
-        - |
-          echo "Searching for files to copy within the source volume"
-          echo "cert: ${CERT_FILE_NAME}"
-          echo "key: ${KEY_FILE_NAME}"
-          echo "cacert: ${CACERT_FILE_NAME}"
-
-          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
-          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
-          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
-          
-          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
-          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
-          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
-
-          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
-          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
-          chmod 444 $CERT_FILE_TARGET || exit 1
-
-          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
-          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
-          chmod 444 $KEY_FILE_TARGET || exit 1
-
-          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
-          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
-          chmod 444 $CACERT_FILE_TARGET || exit 1
-        env:
-        - name: CERT_FILE_NAME
-          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
-        - name: KEY_FILE_NAME
-          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
-        - name: CACERT_FILE_NAME
-          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
-        - name: CERT_FILE_TARGET
-          value: /etc/ssl/push-proxy/push-proxy.pem
-        - name: KEY_FILE_TARGET
-          value: /etc/ssl/push-proxy/push-proxy-key.pem
-        - name: CACERT_FILE_TARGET
-          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
-        securityContext:
-          runAsNonRoot: false
-        volumeMounts:
-        - name: metrics-cert-dir-source
-          mountPath: /etc/source
-          readOnly: true
-        - name: metrics-cert-dir
-          mountPath: /etc/ssl/push-proxy
-      volumes:
-      - name: metrics-cert-dir-source
-        hostPath:
-          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
-      - name: metrics-cert-dir
-        emptyDir: {}
-      {{- end }}
-{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-proxy-rbac.yaml	2021-01-15 13:46:43.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
@@ -1,63 +0,0 @@
-{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
-apiVersion: rbac.authorization.k8s.io/v1
-kind: ClusterRole
-metadata:
-  name: {{ template "pushProxy.proxy.name" . }}
-  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
-rules:
-- apiGroups: ['policy']
-  resources: ['podsecuritypolicies']
-  verbs:     ['use']
-  resourceNames:
-  - {{ template "pushProxy.proxy.name" . }}
----
-apiVersion: rbac.authorization.k8s.io/v1
-kind: ClusterRoleBinding
-metadata:
-  name: {{ template "pushProxy.proxy.name" . }}
-  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
-roleRef:
-  apiGroup: rbac.authorization.k8s.io
-  kind: ClusterRole
-  name: {{ template "pushProxy.proxy.name" . }}
-subjects:
-  - kind: ServiceAccount
-    name: {{ template "pushProxy.proxy.name" . }}
-    namespace: {{ .Release.Namespace }}
----
-apiVersion: v1
-kind: ServiceAccount
-metadata:
-  name: {{ template "pushProxy.proxy.name" . }}
-  namespace: {{ .Release.Namespace }}
-  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
----
-apiVersion: policy/v1beta1
-kind: PodSecurityPolicy
-metadata:
-  name: {{ template "pushProxy.proxy.name" . }}
-  namespace: {{ .Release.Namespace }}
-  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
-spec:
-  privileged: false
-  hostNetwork: false
-  hostIPC: false
-  hostPID: false
-  runAsUser:
-    rule: 'MustRunAsNonRoot'
-  seLinux:
-    rule: 'RunAsAny'
-  supplementalGroups:
-    rule: 'MustRunAs'
-    ranges:
-      - min: 1
-        max: 65535
-  fsGroup:
-    rule: 'MustRunAs'
-    ranges:
-      - min: 1
-        max: 65535
-  readOnlyRootFilesystem: false
-  volumes:
-    - 'secret'
-{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-proxy.yaml	2021-01-15 13:46:43.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
@@ -1,50 +0,0 @@
-{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
-apiVersion: apps/v1
-kind: Deployment
-metadata:
-  name: {{ template "pushProxy.proxy.name" . }}
-  namespace: {{ template "pushprox.namespace" . }}
-  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
-    pushprox-exporter: "proxy"
-spec:
-  selector:
-    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
-  template:
-    metadata:
-      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
-    spec: 
-      securityContext:
-        runAsNonRoot: true
-        runAsUser: 1000
-{{- if .Values.proxy.nodeSelector }}
-      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
-{{- end }}
-{{- if .Values.proxy.tolerations }}
-      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
-{{- end }}
-      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
-      containers:
-      - name: pushprox-proxy
-        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
-        command:
-        {{- range .Values.proxy.command }}
-          - {{ . | quote }}
-        {{- end }}
-        {{- if .Values.proxy.resources }}
-        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
-        {{- end }}
----
-apiVersion: v1
-kind: Service
-metadata:
-  name: {{ template "pushProxy.proxy.name" . }}
-  namespace: {{ template "pushprox.namespace" . }}
-  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
-spec:
-  ports:
-  - name: pp-proxy
-    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
-    protocol: TCP
-    targetPort: {{ .Values.proxy.port }}
-  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
-{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-servicemonitor.yaml	2021-01-15 13:46:43.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
@@ -1,39 +0,0 @@
-{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
-apiVersion: monitoring.coreos.com/v1
-kind: ServiceMonitor
-metadata:
-  name: {{ template "pushprox.serviceMonitor.name" . }}
-  namespace: {{ template "pushprox.namespace" . }}
-  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
-spec:
-  endpoints:
-  - port: metrics
-    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
-    {{- if .Values.clients.https.enabled }}
-    params:
-      _scheme: [https]
-    {{- end }}
-  jobLabel: component
-  podTargetLabels:
-  - component
-  - pushprox-exporter
-  namespaceSelector:
-    matchNames:
-    - {{ template "pushprox.namespace" . }}
-  selector:
-    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
----
-apiVersion: v1
-kind: Service
-metadata:
-  name: {{ template "pushProxy.client.name" . }}
-  namespace: {{ template "pushprox.namespace" . }}
-  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
-spec:
-  ports:
-  - name: metrics
-    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
-    protocol: TCP
-    targetPort: {{ .Values.metricsPort }}
-  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
-{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rancher-pushprox/values.yaml	2021-01-15 13:46:43.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rancher-pushprox/values.yaml	1969-12-31 16:00:00.000000000 -0800
@@ -1,86 +0,0 @@
-# Default values for rancher-pushprox.
-# This is a YAML-formatted file.
-# Declare variables to be passed into your templates.
-
-# Default image containing both the proxy and the client was generated from the following Dockerfile
-# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
-
-# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
-# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
-# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
-# you will need to set the clients / proxy nodeSelector and tolerations accordingly
-
-# Configuration
-
-global:
-  cattle:
-    systemDefaultRegistry: ""
-
-# The component that is being monitored (i.e. etcd)
-component: "component"
-
-# The port containing the metrics that need to be scraped
-metricsPort: 2739
-
-# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
-serviceMonitor: 
-  enabled: true
-
-clients:
-  enabled: true
-  # The port which the PushProx client will post PushProx metrics to
-  port: 9369
-  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
-  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
-  proxyUrl: ""
-  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
-  # It will only allow proxy requests to the metricsPort specified
-  useLocalhost: false
-  # Configuration for accessing metrics via HTTPS
-  https:
-    # Does the client require https to access the metrics?
-    enabled: false
-    # If set to true, the client will create a service account with adequate permissions and set a flag
-    # on the client to use the service account token provided by it to make authorized scrape requests
-    useServiceAccountCredentials: false
-    # If set to true, the client will disable SSL security checks
-    insecureSkipVerify: false
-    # Directory on host where necessary TLS cert and key to scrape metrics can be found
-    certDir: ""
-    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
-    certFile: ""
-    keyFile: ""
-    caCertFile: ""
-
-  # Resource limits
-  resources: {}
-
-  # Options to select all nodes to deploy client DaemonSet on
-  nodeSelector: {}
-  tolerations: []
-
-  image:
-    repository: rancher/pushprox-client
-    tag: v0.1.0-rancher1-client
-  command: ["pushprox-client"]
-
-  copyCertsImage:
-    repository: rancher/library-busybox
-    tag: 1.31.1
-
-proxy:
-  enabled: true
-  # The port through which PushProx clients will communicate to the proxy
-  port: 8080
-  
-  # Resource limits
-  resources: {}
-  
-  # Options to select a node to run a single proxy deployment on
-  nodeSelector: {}
-  tolerations: []
-
-  image:
-    repository: rancher/pushprox-proxy
-    tag: v0.1.0-rancher1-proxy
-  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: rke2ControllerManager
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2ControllerManager/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2ControllerManager/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: rke2Etcd
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Etcd/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Etcd/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: rke2Proxy
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Proxy/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Proxy/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: rke2Scheduler
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rke2Scheduler/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rke2Scheduler/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: rkeControllerManager
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeControllerManager/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeControllerManager/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: rkeEtcd
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeEtcd/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeEtcd/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: rkeProxy
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeProxy/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeProxy/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/.helmignore dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/.helmignore
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/.helmignore	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/.helmignore	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,23 @@
+# Patterns to ignore when building packages.
+# This supports shell glob matching, relative path matching, and
+# negation (prefixed with !). Only one pattern per line.
+.DS_Store
+# Common VCS dirs
+.git/
+.gitignore
+.bzr/
+.bzrignore
+.hg/
+.hgignore
+.svn/
+# Common backup files
+*.swp
+*.bak
+*.tmp
+*.orig
+*~
+# Various IDEs
+.project
+.idea/
+*.tmproj
+.vscode/
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/Chart.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,12 @@
+annotations:
+  catalog.cattle.io/hidden: "true"
+  catalog.rancher.io/certified: rancher
+  catalog.rancher.io/namespace: cattle-monitoring-system
+  catalog.rancher.io/release-name: rancher-pushprox
+apiVersion: v1
+appVersion: 0.1.0
+description: Sets up a deployment of the PushProx proxy and a DaemonSet of PushProx
+  clients.
+name: rkeScheduler
+type: application
+version: 0.1.2
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/README.md dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/README.md
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/README.md	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/README.md	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,54 @@
+# rancher-pushprox
+
+A Rancher chart based on Rancher [PushProx](https://github.com/rancher/PushProx) that sets up a Deployment of a PushProx proxy and a DaemonSet of PushProx clients on a Kubernetes cluster.
+
+Installs [rancher-pushprox](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-pushprox) to create PushProx clients that can access their host's network and register with a PushProx proxy. A [Prometheus Operator](https://github.com/coreos/prometheus-operator) ServiceMonitor CR is also included that is configured to scrape the metrics from each of the clients through the proxy.
+
+Using an instance of this chart is suitable for the following scenarios:
+- You need to scrape metrics from a port that should not be accessible outside of the host (e.g. scraping `etcd` metrics in a hardened cluster)
+- You need to scrape metrics on a host that are not exposed outside of 127.0.0.1 (e.g. scraping `kube-proxy` metrics)
+- You need to scrape metrics through HTTPS using certs hosted directly on `hostPath`
+- You need to scrape metrics from Kubernetes components that require authorization via a service account (e.g. permissions to make request to `/metrics`)
+- You need to scrape metrics without access to cacerts (i.e. enable `insecureSkipVerify`)
+
+The clients and proxy are created based on a Rancher fork of the [prometheus-community/PushProx](https://github.com/prometheus-community/PushProx) project.
+
+## Configuration
+
+The following tables list the configurable parameters of the rancher-pushprox chart and their default values.
+
+### General
+
+#### Required
+| Parameter | Description | Example |
+| ----- | ----------- | ------ |
+| `component` | The component that is being monitored | `kube-etcd`
+| `metricsPort` | The port on the host that contains the metrics you want to scrape (e.g. `http://<HOST_IP>:<metricsPort>/metrics`) | `2379` |
+
+#### Optional
+| Parameter | Description | Default |
+| ----- | ----------- | ------ |
+| `serviceMonitor.enabled` | Deploys a [Prometheus Operator](https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#servicemonitor) ServiceMonitor CR that is configured to scrape metrics on the hosts that the clients are deployed on via the proxy. Also deploys a Service that points to all pods with the expected client name that exposes the `metricsPort` selected | `true` |
+| `clients.enabled` | Deploys a DaemonSet of clients that are each capable of scraping endpoints on the hostNetwork it is deployed on | `true` |
+| `clients.port` |  The port where the client will publish PushProx client-specific metrics. If deploying multiple clients onto the same node, the clients should not have conflicting ports | `9369` |
+| `clients.proxyUrl` | Overrides the default proxyUrl setting of `http://pushprox-{{ .Values.component }}-proxy.{{ . Release.Namespace }}.svc.cluster.local:{{ .Values.proxy.port }}"` with the `proxyUrl` specified | `""` |
+| `clients.useLocalhost` | Sets a flag on each client deployment to redirect scrapes directed to `HOST_IP` to `127.0.0.1` | `false` |
+| `clients.https.enabled` | Enables scraping metrics via HTTPS using the provided TLS certs that exist on each host | `false` |
+| `clients.https.useServiceAccountCredentials` | If set to true, the client will create a service account with permissions to scrape `/metrics` endpoint of Kubernetes components. The client will use the service account token provided to make authorized scrape requests to the Kubernetes API | `false` |
+| `clients.https.insecureSkipVerify` | If set to true, the client will disable SSL security checks | `false` |
+| `clients.https.certDir` | A `hostPath` where TLS certs can be found. This path is mounted as a volume on an `initContainer` which copies only the necessary files over to an EmptyDir volume used by each client. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.certFile` | The path to the TLS cert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.keyFile` | The path to the TLS key file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.https.caCertFile` | The path to the TLS cacert file located within `clients.https.certDir`. Required and only used if `clients.https.enabled` is set | `""` |
+| `clients.resources` | Set resource limits and requests for the client container | `{}` |
+| `clients.nodeSelector` | Select which nodes to deploy the clients on | `{}` |
+| `clients.tolerations` | Specify tolerations for clients | `[]` |
+| `proxy.enabled` | Deploys the proxy that each client will register with | `true` |
+| `proxy.port` | The port exposed by the proxy that each client will register with to allow metrics to be scraped from the host | `8080` |
+| `proxy.resources` | Set resource limits and requests for the proxy container | `{}` |
+| `proxy.nodeSelector` | Select which nodes the proxy can be deployed on | `{}` |
+| `proxy.tolerations` | Specify tolerations (if necessary) to allow the proxy to be deployed on the selected node | `[]` |
+
+*Tip: The filepaths set in `clients.https.<cert|key|caCert>File` can include wildcard characters*. 
+
+See [rancher-monitoring](https://github.com/rancher/charts/tree/gh-pages/packages/rancher-monitoring) for examples of how this chart can be used.
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/templates/_helpers.tpl dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/templates/_helpers.tpl
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/templates/_helpers.tpl	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/templates/_helpers.tpl	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,65 @@
+# Rancher
+
+{{- define "system_default_registry" -}}
+{{- if .Values.global.cattle.systemDefaultRegistry -}}
+{{- printf "%s/" .Values.global.cattle.systemDefaultRegistry -}}
+{{- end -}}
+{{- end -}}
+
+# General
+
+{{- define "pushprox.namespace" -}}
+  {{- if .Values.namespaceOverride -}}
+    {{- .Values.namespaceOverride -}}
+  {{- else -}}
+    {{- .Release.Namespace -}}
+  {{- end -}}
+{{- end -}}
+
+{{- define "pushProxy.commonLabels" -}}
+release: {{ .Release.Name }}
+component: {{ .Values.component | quote }}
+provider: kubernetes
+{{- end -}}
+
+{{- define "pushProxy.proxyUrl" -}}
+{{- $_ := (required "Template requires either .Values.proxy.port or .Values.client.proxyUrl to set proxyUrl for client" (or .Values.clients.proxyUrl .Values.proxy.port)) -}}
+{{- if .Values.clients.proxyUrl -}}
+{{ printf "%s" .Values.clients.proxyUrl }}
+{{- else -}}
+{{ printf "http://%s.%s.svc.cluster.local:%d" (include "pushProxy.proxy.name" .) .Release.Namespace (int .Values.proxy.port) }}
+{{- end -}}{{- end -}}
+
+# Client
+
+{{- define "pushProxy.client.name" -}}
+{{- printf "pushprox-%s-client" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.client.labels" -}}
+k8s-app: {{ template "pushProxy.client.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# Proxy
+
+{{- define "pushProxy.proxy.name" -}}
+{{- printf "pushprox-%s-proxy" (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.proxy.labels" -}}
+k8s-app: {{ template "pushProxy.proxy.name" . }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
+
+# ServiceMonitor
+
+{{- define "pushprox.serviceMonitor.name" -}}
+{{- printf "%s-%s" .Release.Name (required ".Values.component is required" .Values.component) -}}
+{{- end -}}
+
+{{- define "pushProxy.serviceMonitor.labels" -}}
+app: {{ template "pushprox.serviceMonitor.name" . }}
+release: {{ .Release.Name | quote }}
+{{ template "pushProxy.commonLabels" . }}
+{{- end -}}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-clients-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-clients-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-clients-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-clients-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,74 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.client.name" . }}
+{{- if and .Values.clients.https.enabled .Values.clients.https.useServiceAccountCredentials }}
+- nonResourceURLs: ["/metrics"]
+  verbs: ["get"]
+{{- end }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.client.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.client.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: true
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'RunAsAny'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 0
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+    - 'emptyDir'
+    - 'hostPath'
+  allowedHostPaths:
+  - pathPrefix: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+    readOnly: true
+{{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-clients.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-clients.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-clients.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-clients.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,133 @@
+{{- if .Values.clients }}{{- if .Values.clients.enabled }}
+apiVersion: apps/v1
+kind: DaemonSet
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+    pushprox-exporter: "client"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.client.labels" . | nindent 8 }}
+    spec:
+{{- if .Values.clients.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.clients.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.clients.tolerations }}
+      tolerations: {{ toYaml .Values.clients.tolerations | nindent 6 }}
+{{- end }}
+      hostNetwork: true
+      dnsPolicy: ClusterFirstWithHostNet
+      serviceAccountName: {{ template "pushProxy.client.name" . }}
+      containers:
+      - name: pushprox-client
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.image.repository }}:{{ .Values.clients.image.tag }}
+        command:
+        {{- range .Values.clients.command }}
+          - {{ . | quote }}
+        {{- end }}
+        args:
+        - --fqdn=$(HOST_IP)
+        - --proxy-url=$(PROXY_URL)
+        - --metrics-addr=$(PORT)
+        - --allow-port={{ required "Need .Values.metricsPort to configure client to be allowed to scrape metrics at port" .Values.metricsPort}}
+        {{- if .Values.clients.useLocalhost }}
+        - --use-localhost
+        {{- end }}
+        {{- if .Values.clients.https.enabled }}
+        {{- if .Values.clients.https.insecureSkipVerify }}
+        - --insecure-skip-verify
+        {{- end }}
+        {{- if .Values.clients.https.useServiceAccountCredentials }}
+        - --token-path=/var/run/secrets/kubernetes.io/serviceaccount/token
+        {{- end }}
+        {{- if .Values.clients.https.certDir }}
+        - --tls.cert=/etc/ssl/push-proxy/push-proxy.pem
+        - --tls.key=/etc/ssl/push-proxy/push-proxy-key.pem
+        - --tls.cacert=/etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        {{- end }}
+        {{- end }}
+        env:
+        - name: HOST_IP
+          valueFrom:
+            fieldRef:
+              fieldPath: status.hostIP
+        - name: PORT
+          value: :{{ .Values.clients.port }}
+        - name: PROXY_URL
+          value: {{ template "pushProxy.proxyUrl" . }}
+        securityContext:
+          runAsNonRoot: true
+          runAsUser: 1000
+        {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+        volumeMounts:
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+        {{- end }}
+        {{- if .Values.clients.resources }}
+        resources: {{ toYaml .Values.clients.resources | nindent 10 }}
+        {{- end }}
+      {{- if and .Values.clients.https.enabled .Values.clients.https.certDir }}
+      initContainers:
+      - name: copy-certs
+        image: {{ template "system_default_registry" . }}{{ .Values.clients.copyCertsImage.repository }}:{{ .Values.clients.copyCertsImage.tag }}
+        command:
+        - sh
+        - -c
+        - |
+          echo "Searching for files to copy within the source volume"
+          echo "cert: ${CERT_FILE_NAME}"
+          echo "key: ${KEY_FILE_NAME}"
+          echo "cacert: ${CACERT_FILE_NAME}"
+
+          CERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CERT_FILE_NAME}" | sort -r | head -n 1)
+          KEY_FILE_SOURCE=$(find /etc/source/ -type f -name "${KEY_FILE_NAME}" | sort -r | head -n 1)
+          CACERT_FILE_SOURCE=$(find /etc/source/ -type f -name "${CACERT_FILE_NAME}" | sort -r | head -n 1)
+          
+          test -z ${CERT_FILE_SOURCE} && echo "Failed to find cert file" && exit 1
+          test -z ${KEY_FILE_SOURCE} && echo "Failed to find key file" && exit 1
+          test -z ${CACERT_FILE_SOURCE} && echo "Failed to find cacert file" && exit 1
+
+          echo "Copying cert file from $CERT_FILE_SOURCE to $CERT_FILE_TARGET"
+          cp $CERT_FILE_SOURCE $CERT_FILE_TARGET || exit 1
+          chmod 444 $CERT_FILE_TARGET || exit 1
+
+          echo "Copying key file from $KEY_FILE_SOURCE to $KEY_FILE_TARGET"
+          cp $KEY_FILE_SOURCE $KEY_FILE_TARGET || exit 1
+          chmod 444 $KEY_FILE_TARGET || exit 1
+
+          echo "Copying cacert file from $CACERT_FILE_SOURCE to $CACERT_FILE_TARGET"
+          cp $CACERT_FILE_SOURCE $CACERT_FILE_TARGET || exit 1
+          chmod 444 $CACERT_FILE_TARGET || exit 1
+        env:
+        - name: CERT_FILE_NAME
+          value: {{ required "Need a TLS cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.certFile }}
+        - name: KEY_FILE_NAME
+          value: {{ required "Need a TLS key file for scraping metrics endpoint over HTTPs" .Values.clients.https.keyFile }}
+        - name: CACERT_FILE_NAME
+          value: {{ required "Need a TLS CA cert file for scraping metrics endpoint over HTTPs" .Values.clients.https.caCertFile }}
+        - name: CERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy.pem
+        - name: KEY_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-key.pem
+        - name: CACERT_FILE_TARGET
+          value: /etc/ssl/push-proxy/push-proxy-ca-cert.pem
+        securityContext:
+          runAsNonRoot: false
+        volumeMounts:
+        - name: metrics-cert-dir-source
+          mountPath: /etc/source
+          readOnly: true
+        - name: metrics-cert-dir
+          mountPath: /etc/ssl/push-proxy
+      volumes:
+      - name: metrics-cert-dir-source
+        hostPath:
+          path: {{ required "Need access to volume on host with the SSL cert files to use HTTPs" .Values.clients.https.certDir }}
+      - name: metrics-cert-dir
+        emptyDir: {}
+      {{- end }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-proxy-rbac.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-proxy-rbac.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-proxy-rbac.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-proxy-rbac.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,63 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRole
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+rules:
+- apiGroups: ['policy']
+  resources: ['podsecuritypolicies']
+  verbs:     ['use']
+  resourceNames:
+  - {{ template "pushProxy.proxy.name" . }}
+---
+apiVersion: rbac.authorization.k8s.io/v1
+kind: ClusterRoleBinding
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+roleRef:
+  apiGroup: rbac.authorization.k8s.io
+  kind: ClusterRole
+  name: {{ template "pushProxy.proxy.name" . }}
+subjects:
+  - kind: ServiceAccount
+    name: {{ template "pushProxy.proxy.name" . }}
+    namespace: {{ .Release.Namespace }}
+---
+apiVersion: v1
+kind: ServiceAccount
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+---
+apiVersion: policy/v1beta1
+kind: PodSecurityPolicy
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ .Release.Namespace }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  privileged: false
+  hostNetwork: false
+  hostIPC: false
+  hostPID: false
+  runAsUser:
+    rule: 'MustRunAsNonRoot'
+  seLinux:
+    rule: 'RunAsAny'
+  supplementalGroups:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  fsGroup:
+    rule: 'MustRunAs'
+    ranges:
+      - min: 1
+        max: 65535
+  readOnlyRootFilesystem: false
+  volumes:
+    - 'secret'
+{{- end }}{{- end }}
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-proxy.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-proxy.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-proxy.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-proxy.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,50 @@
+{{- if and .Values.proxy }}{{ if .Values.proxy.enabled }}
+apiVersion: apps/v1
+kind: Deployment
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+    pushprox-exporter: "proxy"
+spec:
+  selector:
+    matchLabels: {{ include "pushProxy.proxy.labels" . | nindent 6 }}
+  template:
+    metadata:
+      labels: {{ include "pushProxy.proxy.labels" . | nindent 8 }}
+    spec: 
+      securityContext:
+        runAsNonRoot: true
+        runAsUser: 1000
+{{- if .Values.proxy.nodeSelector }}
+      nodeSelector: {{ toYaml .Values.proxy.nodeSelector | nindent 8 }}
+{{- end }}
+{{- if .Values.proxy.tolerations }}
+      tolerations: {{ toYaml .Values.proxy.tolerations | nindent 6 }}
+{{- end }}
+      serviceAccountName: {{ template "pushProxy.proxy.name" . }}
+      containers:
+      - name: pushprox-proxy
+        image: {{ template "system_default_registry" . }}{{ .Values.proxy.image.repository }}:{{ .Values.proxy.image.tag }}
+        command:
+        {{- range .Values.proxy.command }}
+          - {{ . | quote }}
+        {{- end }}
+        {{- if .Values.proxy.resources }}
+        resources: {{ toYaml .Values.proxy.resources | nindent 10 }}
+        {{- end }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.proxy.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: pp-proxy
+    port: {{ required "Need .Values.proxy.port to configure proxy" .Values.proxy.port }}
+    protocol: TCP
+    targetPort: {{ .Values.proxy.port }}
+  selector: {{ include "pushProxy.proxy.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-servicemonitor.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-servicemonitor.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-servicemonitor.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/templates/pushprox-servicemonitor.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,39 @@
+{{- if .Values.serviceMonitor }}{{- if .Values.serviceMonitor.enabled }}
+apiVersion: monitoring.coreos.com/v1
+kind: ServiceMonitor
+metadata:
+  name: {{ template "pushprox.serviceMonitor.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.serviceMonitor.labels" . | nindent 4 }}
+spec:
+  endpoints:
+  - port: metrics
+    proxyUrl: {{ template "pushProxy.proxyUrl" . }}
+    {{- if .Values.clients.https.enabled }}
+    params:
+      _scheme: [https]
+    {{- end }}
+  jobLabel: component
+  podTargetLabels:
+  - component
+  - pushprox-exporter
+  namespaceSelector:
+    matchNames:
+    - {{ template "pushprox.namespace" . }}
+  selector:
+    matchLabels: {{ include "pushProxy.client.labels" . | nindent 6 }}
+---
+apiVersion: v1
+kind: Service
+metadata:
+  name: {{ template "pushProxy.client.name" . }}
+  namespace: {{ template "pushprox.namespace" . }}
+  labels: {{ include "pushProxy.client.labels" . | nindent 4 }}
+spec:
+  ports:
+  - name: metrics
+    port: {{ required "Need .Values.metricsPort to configure client to listen to metrics at port" .Values.metricsPort}}
+    protocol: TCP
+    targetPort: {{ .Values.metricsPort }}
+  selector: {{ include "pushProxy.client.labels" . | nindent 4 }}
+{{- end }}{{- end }}
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/values.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/values.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts/rkeScheduler/values.yaml	1969-12-31 16:00:00.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts/rkeScheduler/values.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -0,0 +1,86 @@
+# Default values for rancher-pushprox.
+# This is a YAML-formatted file.
+# Declare variables to be passed into your templates.
+
+# Default image containing both the proxy and the client was generated from the following Dockerfile
+# https://github.com/prometheus-community/PushProx/blob/eeadbe766641699129920ccfaaaa30a85c67fe81/Dockerfile#L1-L15
+
+# Note: if using a cloud provider, the nodes that contain the PushProxy client must allow the node(s) that contain(s)
+# the PushProxy proxy to communicate with it on port {{ .Values.clients.port }}. If you have special restrictions,
+# (i.e. client should only run on etcd nodes and only control plane should have access to the port on the etcd node),
+# you will need to set the clients / proxy nodeSelector and tolerations accordingly
+
+# Configuration
+
+global:
+  cattle:
+    systemDefaultRegistry: ""
+
+# The component that is being monitored (i.e. etcd)
+component: "component"
+
+# The port containing the metrics that need to be scraped
+metricsPort: 2739
+
+# Configure ServiceMonitor that monitors metrics from the metricsPort endpoint
+serviceMonitor: 
+  enabled: true
+
+clients:
+  enabled: true
+  # The port which the PushProx client will post PushProx metrics to
+  port: 9369
+  # If unset, this will default to the URL for the proxy service: http://pushprox-{{component}}-proxy.{{namepsace}}.svc.cluster.local:{{proxy.port}}
+  # Should be modified if the clients are being deployed outside the cluster where the proxy rests, otherwise leave it null
+  proxyUrl: ""
+  # If set to true, the client will forward any requests from the host IP to 127.0.0.1
+  # It will only allow proxy requests to the metricsPort specified
+  useLocalhost: false
+  # Configuration for accessing metrics via HTTPS
+  https:
+    # Does the client require https to access the metrics?
+    enabled: false
+    # If set to true, the client will create a service account with adequate permissions and set a flag
+    # on the client to use the service account token provided by it to make authorized scrape requests
+    useServiceAccountCredentials: false
+    # If set to true, the client will disable SSL security checks
+    insecureSkipVerify: false
+    # Directory on host where necessary TLS cert and key to scrape metrics can be found
+    certDir: ""
+    # Filenames for files located in .Values.clients.https.certDir that correspond to TLS settings
+    certFile: ""
+    keyFile: ""
+    caCertFile: ""
+
+  # Resource limits
+  resources: {}
+
+  # Options to select all nodes to deploy client DaemonSet on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-client
+    tag: v0.1.0-rancher1-client
+  command: ["pushprox-client"]
+
+  copyCertsImage:
+    repository: rancher/library-busybox
+    tag: 1.31.1
+
+proxy:
+  enabled: true
+  # The port through which PushProx clients will communicate to the proxy
+  port: 8080
+  
+  # Resource limits
+  resources: {}
+  
+  # Options to select a node to run a single proxy deployment on
+  nodeSelector: {}
+  tolerations: []
+
+  image:
+    repository: rancher/pushprox-proxy
+    tag: v0.1.0-rancher1-proxy
+  command: ["pushprox-proxy"]
\ No newline at end of file
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/charts-crd/Chart.yaml dev-v2.5-source-alt/charts/rancher-monitoring/charts-crd/Chart.yaml
--- dev-v2.5-source/charts/rancher-monitoring/charts-crd/Chart.yaml	2021-01-15 14:07:36.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/charts-crd/Chart.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -1,10 +1,10 @@
+annotations:
+  catalog.cattle.io/certified: rancher
+  catalog.cattle.io/hidden: "true"
+  catalog.cattle.io/namespace: cattle-monitoring-system
+  catalog.cattle.io/release-name: rancher-monitoring-crd
 apiVersion: v1
-version: 9.4.202
 description: Installs the CRDs for rancher-monitoring.
 name: rancher-monitoring-crd
 type: application
-annotations:
-  catalog.cattle.io/hidden: "true"
-  catalog.cattle.io/release-name: rancher-monitoring-crd
-  catalog.cattle.io/certified: rancher
-  catalog.cattle.io/namespace: cattle-monitoring-system
+version: 9.4.202-rc00
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/requirements.yaml dev-v2.5-source-alt/charts/rancher-monitoring/requirements.yaml
--- dev-v2.5-source/charts/rancher-monitoring/requirements.yaml	2021-01-15 14:07:36.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/requirements.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -1,96 +1,137 @@
 dependencies:
-  - name: kube-state-metrics
-    version: 2.8.14
-    repository: https://charts.helm.sh/stable/
-    condition: kubeStateMetrics.enabled
-  - name: prometheus-node-exporter
-    version: 1.11.2
-    repository: https://prometheus-community.github.io/helm-charts
-    condition: nodeExporter.enabled
-  - name: grafana
-    version: 5.6.4
-    repository: https://grafana.github.io/helm-charts
-    condition: grafana.enabled
-
-  - name: prometheus-adapter
-    version: 2.7.1
-    repository: https://prometheus-community.github.io/helm-charts
-    condition: prometheus-adapter.enabled
-
-  - name: rancher-pushprox
-    alias: rkeControllerManager
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: rkeControllerManager.enabled
-
-  - name: rancher-pushprox
-    alias: rkeScheduler
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: rkeScheduler.enabled
-
-  - name: rancher-pushprox
-    alias: rkeProxy
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: rkeProxy.enabled
-
-  - name: rancher-pushprox
-    alias: rkeEtcd
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: rkeEtcd.enabled
-
-  - name: rancher-pushprox
-    alias: k3sServer
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: k3sServer.enabled
-
-  - name: rancher-pushprox
-    alias: kubeAdmControllerManager
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: kubeAdmControllerManager.enabled
-
-  - name: rancher-pushprox
-    alias: kubeAdmScheduler
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: kubeAdmScheduler.enabled
-
-  - name: rancher-pushprox
-    alias: kubeAdmProxy
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: kubeAdmProxy.enabled
-
-  - name: rancher-pushprox
-    alias: kubeAdmEtcd
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: kubeAdmEtcd.enabled
-
-  - name: rancher-pushprox
-    alias: rke2ControllerManager
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: rke2ControllerManager.enabled
-
-  - name: rancher-pushprox
-    alias: rke2Scheduler
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: rke2Scheduler.enabled
-
-  - name: rancher-pushprox
-    alias: rke2Proxy
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: rke2Proxy.enabled
-
-  - name: rancher-pushprox
-    alias: rke2Etcd
-    version: 0.1.2
-    repository: file://../../rancher-pushprox/charts
-    condition: rke2Etcd.enabled
\ No newline at end of file
+- name: grafana
+  version: ""
+  repository: file://./charts/grafana
+  condition: grafana.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: k3sServer
+  version: ""
+  repository: file://./charts/k3sServer
+  condition: k3sServer.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: kube-state-metrics
+  version: ""
+  repository: file://./charts/kube-state-metrics
+  condition: kubeStateMetrics.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: kubeAdmControllerManager
+  version: ""
+  repository: file://./charts/kubeAdmControllerManager
+  condition: kubeAdmControllerManager.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: kubeAdmEtcd
+  version: ""
+  repository: file://./charts/kubeAdmEtcd
+  condition: kubeAdmEtcd.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: kubeAdmProxy
+  version: ""
+  repository: file://./charts/kubeAdmProxy
+  condition: kubeAdmProxy.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: kubeAdmScheduler
+  version: ""
+  repository: file://./charts/kubeAdmScheduler
+  condition: kubeAdmScheduler.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: prometheus-adapter
+  version: ""
+  repository: file://./charts/prometheus-adapter
+  condition: prometheus-adapter.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: prometheus-node-exporter
+  version: ""
+  repository: file://./charts/prometheus-node-exporter
+  condition: nodeExporter.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: rke2ControllerManager
+  version: ""
+  repository: file://./charts/rke2ControllerManager
+  condition: rke2ControllerManager.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: rke2Etcd
+  version: ""
+  repository: file://./charts/rke2Etcd
+  condition: rke2Etcd.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: rke2Proxy
+  version: ""
+  repository: file://./charts/rke2Proxy
+  condition: rke2Proxy.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: rke2Scheduler
+  version: ""
+  repository: file://./charts/rke2Scheduler
+  condition: rke2Scheduler.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: rkeControllerManager
+  version: ""
+  repository: file://./charts/rkeControllerManager
+  condition: rkeControllerManager.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: rkeEtcd
+  version: ""
+  repository: file://./charts/rkeEtcd
+  condition: rkeEtcd.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: rkeProxy
+  version: ""
+  repository: file://./charts/rkeProxy
+  condition: rkeProxy.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
+- name: rkeScheduler
+  version: ""
+  repository: file://./charts/rkeScheduler
+  condition: rkeScheduler.enabled
+  tags: []
+  enabled: false
+  importvalues: []
+  alias: ""
diff -x '*.tgz' -x '*.lock' -uNr dev-v2.5-source/charts/rancher-monitoring/templates/validate-install-crd.yaml dev-v2.5-source-alt/charts/rancher-monitoring/templates/validate-install-crd.yaml
--- dev-v2.5-source/charts/rancher-monitoring/templates/validate-install-crd.yaml	2021-01-15 14:07:36.000000000 -0800
+++ dev-v2.5-source-alt/charts/rancher-monitoring/templates/validate-install-crd.yaml	2021-01-15 14:24:17.000000000 -0800
@@ -13,7 +13,7 @@
 # {{- end -}}
 # {{- range $_, $exists := $found -}}
 # {{- if (eq $exists false) -}}
-# 	{{- required "Required CRDs are missing. Please install the rancher-monitoring-crd chart before installing this chart." "" -}}
+# 	{{- required "Required CRDs are missing. Please install the corresponding CRD chart before installing this chart." "" -}}
 # {{- end -}}
 # {{- end -}}
-#{{- end -}}
+#{{- end -}}
\ No newline at end of file
